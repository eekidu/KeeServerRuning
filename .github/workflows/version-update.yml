# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: UpdateVersion

on:
  workflow_dispatch:
    inputs:
      groupId:
        description: 'groupId'
        required: true
        default: 'eekidu'

      artifactId:
        description: 'artifactId'
        required: true
        default: 'artifactId'

      version:
        description: 'version'
        required: true
        default: 'version'

jobs:
  say_hello:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Hello ${{ github.event.inputs.groupId }}!"
          echo "- in ${{ github.event.inputs.artifactId }}!"
          echo "- in ${{ github.event.inputs.version }}!"



  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file


      - name: Update version Test
        run: gradle TestMain
        env:
          GROUPID: ${{ github.event.inputs.groupId }}
          ARTIFACTID: ${{ github.event.inputs.artifactId }}
          VERSION: ${{ github.event.inputs.version }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Commit
        run: git add .
        git commit -m "update auto by action"
        git push

    #          echo "${{ github.event.inputs.groupId }}:${{ github.event.inputs.artifactId }}:${{ github.event.inputs.version }}"
    #
    #  build:
    #    runs-on: ubuntu-latest
    #    steps:
    #      - uses: actions/checkout@v2
    #      - name: Set up JDK 1.8
    #        uses: actions/setup-java@v1
    #        with:
    #          java-version: 1.8
    #          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
    #          settings-path: ${{ github.workspace }} # location for the settings.xml file
    #
    #      - name: Update version Test
    #        run: gradle TestMain

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle
#    - name: Publish to GitHub Packages
#      run: gradle TestMain
#      env:
#        USERNAME: ${{ github.actor }}
#        TOKEN: ${{ secrets.GITHUB_TOKEN }}
